<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20212.21.0605.1023                               -->
<workbook original-version='18.1' source-build='2021.2.0 (20212.21.0605.1023)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-on' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource caption='odhf (odhf_XLS)' inline='true' name='federated.1hbb8w503obnen1fz9wgp015rf1i' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='odhf_XLS' name='excel-direct.0jgp0hx0zklhba1fr8zig07jv8in'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='H:/DAB ST CLAIR/DAB 103-Analytic tools &amp; Decision Making/Project/ODHF/odhf_XLS.xlsx' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0jgp0hx0zklhba1fr8zig07jv8in' name='odhf' table='[odhf$]' type='table'>
          <columns gridOrigin='A1:Q7034:no:A1:Q7034:1' header='yes' lost='0' outcome='1' processed='38216'>
            <column datatype='string' name='index' ordinal='0' />
            <column datatype='string' name='facility_name' ordinal='1' />
            <column datatype='string' name='source_facility_type' ordinal='2' />
            <column datatype='string' name='odhf_facility_type' ordinal='3' />
            <column datatype='string' name='provider' ordinal='4' />
            <column datatype='string' name='unit' ordinal='5' />
            <column datatype='string' name='street_no' ordinal='6' />
            <column datatype='string' name='street_name' ordinal='7' />
            <column datatype='string' name='postal_code' ordinal='8' />
            <column datatype='string' name='city' ordinal='9' />
            <column datatype='string' name='province' ordinal='10' />
            <column datatype='string' name='source_format_str_address' ordinal='11' />
            <column datatype='string' name='CSDname' ordinal='12' />
            <column datatype='integer' name='CSDuid' ordinal='13' />
            <column datatype='integer' name='Pruid' ordinal='14' />
            <column datatype='real' name='latitude' ordinal='15' />
            <column datatype='real' name='longitude' ordinal='16' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0jgp0hx0zklhba1fr8zig07jv8in' name='odhf' table='[odhf$]' type='table'>
          <columns gridOrigin='A1:Q7034:no:A1:Q7034:1' header='yes' lost='0' outcome='1' processed='38216'>
            <column datatype='string' name='index' ordinal='0' />
            <column datatype='string' name='facility_name' ordinal='1' />
            <column datatype='string' name='source_facility_type' ordinal='2' />
            <column datatype='string' name='odhf_facility_type' ordinal='3' />
            <column datatype='string' name='provider' ordinal='4' />
            <column datatype='string' name='unit' ordinal='5' />
            <column datatype='string' name='street_no' ordinal='6' />
            <column datatype='string' name='street_name' ordinal='7' />
            <column datatype='string' name='postal_code' ordinal='8' />
            <column datatype='string' name='city' ordinal='9' />
            <column datatype='string' name='province' ordinal='10' />
            <column datatype='string' name='source_format_str_address' ordinal='11' />
            <column datatype='string' name='CSDname' ordinal='12' />
            <column datatype='integer' name='CSDuid' ordinal='13' />
            <column datatype='integer' name='Pruid' ordinal='14' />
            <column datatype='real' name='latitude' ordinal='15' />
            <column datatype='real' name='longitude' ordinal='16' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[odhf]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Q7034:no:A1:Q7034:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>38216</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>index</remote-name>
            <remote-type>130</remote-type>
            <local-name>[index]</local-name>
            <parent-name>[odhf]</parent-name>
            <remote-alias>index</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[odhf_DD20A528FB254B989679142C68E86AB3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>facility_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[facility_name]</local-name>
            <parent-name>[odhf]</parent-name>
            <remote-alias>facility_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[odhf_DD20A528FB254B989679142C68E86AB3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source_facility_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[source_facility_type]</local-name>
            <parent-name>[odhf]</parent-name>
            <remote-alias>source_facility_type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[odhf_DD20A528FB254B989679142C68E86AB3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>odhf_facility_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[odhf_facility_type]</local-name>
            <parent-name>[odhf]</parent-name>
            <remote-alias>odhf_facility_type</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[odhf_DD20A528FB254B989679142C68E86AB3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>provider</remote-name>
            <remote-type>130</remote-type>
            <local-name>[provider]</local-name>
            <parent-name>[odhf]</parent-name>
            <remote-alias>provider</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[odhf_DD20A528FB254B989679142C68E86AB3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>130</remote-type>
            <local-name>[unit]</local-name>
            <parent-name>[odhf]</parent-name>
            <remote-alias>unit</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[odhf_DD20A528FB254B989679142C68E86AB3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>street_no</remote-name>
            <remote-type>130</remote-type>
            <local-name>[street_no]</local-name>
            <parent-name>[odhf]</parent-name>
            <remote-alias>street_no</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[odhf_DD20A528FB254B989679142C68E86AB3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>street_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[street_name]</local-name>
            <parent-name>[odhf]</parent-name>
            <remote-alias>street_name</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[odhf_DD20A528FB254B989679142C68E86AB3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>postal_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[postal_code]</local-name>
            <parent-name>[odhf]</parent-name>
            <remote-alias>postal_code</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[odhf_DD20A528FB254B989679142C68E86AB3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[odhf]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[odhf_DD20A528FB254B989679142C68E86AB3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>province</remote-name>
            <remote-type>130</remote-type>
            <local-name>[province]</local-name>
            <parent-name>[odhf]</parent-name>
            <remote-alias>province</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[odhf_DD20A528FB254B989679142C68E86AB3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source_format_str_address</remote-name>
            <remote-type>130</remote-type>
            <local-name>[source_format_str_address]</local-name>
            <parent-name>[odhf]</parent-name>
            <remote-alias>source_format_str_address</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[odhf_DD20A528FB254B989679142C68E86AB3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CSDname</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CSDname]</local-name>
            <parent-name>[odhf]</parent-name>
            <remote-alias>CSDname</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[odhf_DD20A528FB254B989679142C68E86AB3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CSDuid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CSDuid]</local-name>
            <parent-name>[odhf]</parent-name>
            <remote-alias>CSDuid</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[odhf_DD20A528FB254B989679142C68E86AB3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pruid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Pruid]</local-name>
            <parent-name>[odhf]</parent-name>
            <remote-alias>Pruid</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[odhf_DD20A528FB254B989679142C68E86AB3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[odhf]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[odhf_DD20A528FB254B989679142C68E86AB3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[odhf]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[odhf_DD20A528FB254B989679142C68E86AB3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='CS Dname' datatype='string' name='[CSDname]' role='dimension' type='nominal' />
      <column caption='CS Duid' datatype='integer' name='[CSDuid]' role='measure' type='quantitative' />
      <column caption='Provider count' datatype='integer' name='[Calculation_1060316304828145664]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([provider])' />
      </column>
      <column caption='Source Facility type count' datatype='integer' name='[Calculation_562950019235213312]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([source_facility_type])' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='odhf' datatype='table' name='[__tableau_internal_object_id__].[odhf_DD20A528FB254B989679142C68E86AB3]' role='measure' type='quantitative' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Facility Name' datatype='string' name='[facility_name]' role='dimension' type='nominal' />
      <column caption='Index' datatype='string' name='[index]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Odhf Facility Type' datatype='string' name='[odhf_facility_type]' role='dimension' type='nominal' />
      <column caption='Postal Code' datatype='string' name='[postal_code]' role='dimension' type='nominal' />
      <column caption='Provider' datatype='string' name='[provider]' role='dimension' type='nominal' />
      <column caption='Province' datatype='string' name='[province]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <aliases>
          <alias key='&quot;ab&quot;' value='Alberta' />
          <alias key='&quot;bc&quot;' value='British Columbia' />
          <alias key='&quot;mb&quot;' value='Manitoba' />
          <alias key='&quot;nb&quot;' value='New Brunswick' />
          <alias key='&quot;nl&quot;' value='New Foundland and Labrador' />
          <alias key='&quot;ns&quot;' value='Nova Scotia' />
          <alias key='&quot;nt&quot;' value='Northwest Territories' />
          <alias key='&quot;nu&quot;' value='Nunavut' />
          <alias key='&quot;on&quot;' value='Ontario' />
          <alias key='&quot;pe&quot;' value='Prince Edward Island' />
          <alias key='&quot;qc&quot;' value='Quebec' />
          <alias key='&quot;sk&quot;' value='Saskatchewan' />
          <alias key='&quot;yt&quot;' value='Yukon' />
        </aliases>
      </column>
      <column caption='Source Facility Type' datatype='string' name='[source_facility_type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;active acute hospital&quot;' value='Active acute hospital' />
          <alias key='&quot;general&quot;' value='General' />
          <alias key='&quot;other&quot;' value='Other' />
        </aliases>
      </column>
      <column caption='Source Format Str Address' datatype='string' name='[source_format_str_address]' role='dimension' type='nominal' />
      <column caption='Street Name' datatype='string' name='[street_name]' role='dimension' type='nominal' />
      <column caption='Street No' datatype='string' name='[street_no]' role='dimension' type='nominal' />
      <column caption='Unit' datatype='string' name='[unit]' role='dimension' type='nominal' />
      <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
      <column-instance column='[odhf_facility_type]' derivation='None' name='[none:odhf_facility_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[provider]' derivation='None' name='[none:provider:nk]' pivot='key' type='nominal' />
      <column-instance column='[province]' derivation='None' name='[none:province:nk]' pivot='key' type='nominal' />
      <column-instance column='[source_facility_type]' derivation='None' name='[none:source_facility_type:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Exclusions (City,Odhf Facility Type,Province)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:city:nk]' />
          <groupfilter function='level-members' level='[none:odhf_facility_type:nk]' />
          <groupfilter function='level-members' level='[none:province:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='province, city'>
          <field>[province]</field>
          <field>[city]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:city:nk]' palette='tableau20_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;barrington&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;bouctouche&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;dominion&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;gander&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;longueuil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;miramichi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;sheet harbour&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;shubenacadie&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;st brendans&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;stratford&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;tabusintac&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;abbotsford&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;advocate harbour&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ambrose&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ancaster&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;baddeck&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;bathurst&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;bonavista&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;calgary&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;kentville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;memramcook&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;port hood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;saint-quentin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;st johns&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;wolfville&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;antigonish&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;burgeo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;burin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;conway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;cornwall&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;fredericton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;gatineau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;leduc&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;middleton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;seabright&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;st. stephen&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;grande prairie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;berwick&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;dalhousie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;fall river&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;gagetown&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;happy valley-goose bay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;labrador city&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;markham&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;new germany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;north vancouver&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;plaster rock&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;riverside albert&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;sydney&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;woodstock&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;barss corner&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;dutch brook&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;fogo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;gaultois&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;grand bank&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;hamilton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;millbrook 27&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;mississauga&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;moncton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;port elgin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;springhill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;the glades&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;argyle&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;carbonear&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;change islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;dartmouth&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;dundas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;grand falls/grand-sault&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;mahone bay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;neguac&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;neils harbour&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;st.-louis-de-kent&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wareham-Centreville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;winnipeg&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;sherwood park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;caledonia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;hammonds plains&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;pleasnantville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;port colborne&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;rencontre east&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;saint léonard&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;springdale&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;surrey&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;tracadie-sheila&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;wilmot&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;amherst&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;badgers quay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;baker brook&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;bell island&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;botwood&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;burnaby&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;campbellton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;guysborough&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;liverpool&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;mill cove&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;pugwash&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;shédiac&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;simcoe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;stephenville crossing&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;yarmouth&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;bridgewater&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;hartland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;lockeport&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;medicine hat&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;musgrave harbour&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;niagara on the lake&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;old perlican&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;overton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;richmond&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;st stephen&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;stephenville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;truro&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;arichat&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;black&apos;s harbour&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;clarenville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;dayton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;eastport&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;fonthill&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;grand manan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;laval&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;meteghan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;paquetville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;stanley&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;welland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;whitbourne&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;bible hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;glace bay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;lascie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;lewisporte&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;new glasgow&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ottawa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;port aux basques&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;riverview&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;sackville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;st albert&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;sydney mines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;thunder bay&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;bridgetown&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;grand-sault&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;greenfield&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;mount pearl&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;new waterford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;port saunders&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;québec&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;robertville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;saint john&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;tatamagouche&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;toronto&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;victoria cove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;chester&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;inkerman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;lower west pubnico&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;orangeville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;pictou&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;placentia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;roddickton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;sudbury&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;sussex&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;twillingate&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;upper nine mile river&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;cambridge&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;lunenburg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;mcadam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;port hawkesbury&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;robert&apos;s arm&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;rockland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;saint-antoine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;st anthony&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;waterville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;windsor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;beaverbank&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;eastern passage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;edmonton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;forteau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;glovertown&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;grand falls&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;hay river&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;musquodoboit harbour&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;oromocto&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;quispamsis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;st peters&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;lethbridge&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;boiestown&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;canso&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;corner brook&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;debert&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;gambo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;lamèque&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;london&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;middle musquodoboit&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;st catharines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;annapolis royal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;baie verte&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;belleoram&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;brantford&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;brookfield&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;camrose&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;caraquet&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;cheticamp&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;halifax&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;minto&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;sherbrooke&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;shippagan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;vancouver&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;bridgetown north&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;greenwich&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;hampton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;mount carmel&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;niagara falls&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;norris point&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;north sydney&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;regina&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;rogersville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;sainte-anne-de-kent&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;st lawrence&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;trenton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;bedford&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;enfield&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;fredericton junction&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;grand falls-windsor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;harbour breton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;montréal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;perth-andover&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;rexton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;shelburne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;stellarton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;summerford&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;thorold&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;welshpool&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;red deer&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;antgonish&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;bath&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;brockville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;buchans&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;cole harbour&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;edmundston&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;inverness&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;sandy point&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;st albans&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;st. andrews&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;victoria&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:provider:nk]' palette='winter_10_0' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Province of Prince Edward Island&quot;</bucket>
            </map>
            <map to='#6b6b6b'>
              <bucket>&quot;Province of Newfoundland and Labrador&quot;</bucket>
            </map>
            <map to='#6b6b6b'>
              <bucket>&quot;Province of Québec&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Public Health Agency of Canada&quot;</bucket>
            </map>
            <map to='#90728f'>
              <bucket>&quot;Ambulatory Health Care Services&quot;</bucket>
            </map>
            <map to='#90728f'>
              <bucket>&quot;Nunavut&quot;</bucket>
            </map>
            <map to='#90728f'>
              <bucket>&quot;Province of Alberta&quot;</bucket>
            </map>
            <map to='#aa8780'>
              <bucket>&quot;Northwest Territories&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yukon Territories&quot;</bucket>
            </map>
            <map to='#b9a0b4'>
              <bucket>&quot;City of Moncton&quot;</bucket>
            </map>
            <map to='#b9a0b4'>
              <bucket>&quot;Province of Ontario&quot;</bucket>
            </map>
            <map to='#bab2ae'>
              <bucket>&quot;Province of Nova Scotia&quot;</bucket>
            </map>
            <map to='#cecb76'>
              <bucket>&quot;Horizon Health Authority - New Brunswick&quot;</bucket>
            </map>
            <map to='#cecb76'>
              <bucket>&quot;Municipality of Gatineau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Canadian Institute for Health Information&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vitalité Health Authority - New Brunswick&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Saskatchewan Health Authorities&quot;</bucket>
            </map>
            <map to='#ff9888'>
              <bucket>&quot;Municipality of Québec&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:source_facility_type:nk]' palette='superfishel_stone_10_0' type='palette'>
            <map to='#31a1b3'>
              <bucket>&quot;long-term care&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;other&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;rehabilitation&quot;</bucket>
            </map>
            <map to='#6388b4'>
              <bucket>&quot;community health centre&quot;</bucket>
            </map>
            <map to='#6388b4'>
              <bucket>&quot;general&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;long term care&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;extended care&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;active acute hospital&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;chronic care&quot;</bucket>
            </map>
            <map to='#8cc2ca'>
              <bucket>&quot;nursing home and residential care facility&quot;</bucket>
            </map>
            <map to='#8cc2ca'>
              <bucket>&quot;psychiatrique&quot;</bucket>
            </map>
            <map to='#baa094'>
              <bucket>&quot;pediatric&quot;</bucket>
            </map>
            <map to='#baa094'>
              <bucket>&quot;tertiary&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;residential care facility&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;regional&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;nursing home&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;psychiatric&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;active acute hospital, long term care&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;environmental health&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;oncologie&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:province:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;ns&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;nt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;mb&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;nu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;sk&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;pe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;nb&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ab&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;nl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;yt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;on&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;qc&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;bc&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:odhf_facility_type:nk]' palette='jewel_bright_10_0' type='palette'>
            <map to='#5fbb68'>
              <bucket>&quot;Nursing and residential care facilities&quot;</bucket>
            </map>
            <map to='#64cdcc'>
              <bucket>&quot;Hospitals&quot;</bucket>
            </map>
            <map to='#f9d23c'>
              <bucket>&quot;Ambulatory health care services&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='odhf' id='odhf_DD20A528FB254B989679142C68E86AB3'>
            <properties context=''>
              <relation connection='excel-direct.0jgp0hx0zklhba1fr8zig07jv8in' name='odhf' table='[odhf$]' type='table'>
                <columns gridOrigin='A1:Q7034:no:A1:Q7034:1' header='yes' lost='0' outcome='1' processed='38216'>
                  <column datatype='string' name='index' ordinal='0' />
                  <column datatype='string' name='facility_name' ordinal='1' />
                  <column datatype='string' name='source_facility_type' ordinal='2' />
                  <column datatype='string' name='odhf_facility_type' ordinal='3' />
                  <column datatype='string' name='provider' ordinal='4' />
                  <column datatype='string' name='unit' ordinal='5' />
                  <column datatype='string' name='street_no' ordinal='6' />
                  <column datatype='string' name='street_name' ordinal='7' />
                  <column datatype='string' name='postal_code' ordinal='8' />
                  <column datatype='string' name='city' ordinal='9' />
                  <column datatype='string' name='province' ordinal='10' />
                  <column datatype='string' name='source_format_str_address' ordinal='11' />
                  <column datatype='string' name='CSDname' ordinal='12' />
                  <column datatype='integer' name='CSDuid' ordinal='13' />
                  <column datatype='integer' name='Pruid' ordinal='14' />
                  <column datatype='real' name='latitude' ordinal='15' />
                  <column datatype='real' name='longitude' ordinal='16' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='odhf (odhf_XLS) (2)' inline='true' name='federated.1hbb8w503obnen1fz9wgp015rf1i (copy)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='odhf_XLS' name='excel-direct.13id5aq0gyrk3q1clod480d53wyi'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='H:/DAB ST CLAIR/DAB 103-Analytic tools &amp; Decision Making/Project/TABLEAU/103_tab_part2.twb Files/Data/ODHF/odhf_XLS.xlsx' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.13id5aq0gyrk3q1clod480d53wyi' name='odhf' table='[odhf$]' type='table'>
          <columns gridOrigin='A1:Q7034:no:A1:Q7034:1' header='yes' lost='0' outcome='1' processed='38216'>
            <column datatype='string' name='index' ordinal='0' />
            <column datatype='string' name='facility_name' ordinal='1' />
            <column datatype='string' name='source_facility_type' ordinal='2' />
            <column datatype='string' name='odhf_facility_type' ordinal='3' />
            <column datatype='string' name='provider' ordinal='4' />
            <column datatype='string' name='unit' ordinal='5' />
            <column datatype='string' name='street_no' ordinal='6' />
            <column datatype='string' name='street_name' ordinal='7' />
            <column datatype='string' name='postal_code' ordinal='8' />
            <column datatype='string' name='city' ordinal='9' />
            <column datatype='string' name='province' ordinal='10' />
            <column datatype='string' name='source_format_str_address' ordinal='11' />
            <column datatype='string' name='CSDname' ordinal='12' />
            <column datatype='integer' name='CSDuid' ordinal='13' />
            <column datatype='integer' name='Pruid' ordinal='14' />
            <column datatype='real' name='latitude' ordinal='15' />
            <column datatype='real' name='longitude' ordinal='16' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.13id5aq0gyrk3q1clod480d53wyi' name='odhf' table='[odhf$]' type='table'>
          <columns gridOrigin='A1:Q7034:no:A1:Q7034:1' header='yes' lost='0' outcome='1' processed='38216'>
            <column datatype='string' name='index' ordinal='0' />
            <column datatype='string' name='facility_name' ordinal='1' />
            <column datatype='string' name='source_facility_type' ordinal='2' />
            <column datatype='string' name='odhf_facility_type' ordinal='3' />
            <column datatype='string' name='provider' ordinal='4' />
            <column datatype='string' name='unit' ordinal='5' />
            <column datatype='string' name='street_no' ordinal='6' />
            <column datatype='string' name='street_name' ordinal='7' />
            <column datatype='string' name='postal_code' ordinal='8' />
            <column datatype='string' name='city' ordinal='9' />
            <column datatype='string' name='province' ordinal='10' />
            <column datatype='string' name='source_format_str_address' ordinal='11' />
            <column datatype='string' name='CSDname' ordinal='12' />
            <column datatype='integer' name='CSDuid' ordinal='13' />
            <column datatype='integer' name='Pruid' ordinal='14' />
            <column datatype='real' name='latitude' ordinal='15' />
            <column datatype='real' name='longitude' ordinal='16' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[odhf]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Q7034:no:A1:Q7034:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>38216</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>index</remote-name>
            <remote-type>130</remote-type>
            <local-name>[index]</local-name>
            <parent-name>[odhf]</parent-name>
            <remote-alias>index</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[odhf_49F56BB14AC34017A9D3288E9E418608]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>facility_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[facility_name]</local-name>
            <parent-name>[odhf]</parent-name>
            <remote-alias>facility_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[odhf_49F56BB14AC34017A9D3288E9E418608]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source_facility_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[source_facility_type]</local-name>
            <parent-name>[odhf]</parent-name>
            <remote-alias>source_facility_type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[odhf_49F56BB14AC34017A9D3288E9E418608]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>odhf_facility_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[odhf_facility_type]</local-name>
            <parent-name>[odhf]</parent-name>
            <remote-alias>odhf_facility_type</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[odhf_49F56BB14AC34017A9D3288E9E418608]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>provider</remote-name>
            <remote-type>130</remote-type>
            <local-name>[provider]</local-name>
            <parent-name>[odhf]</parent-name>
            <remote-alias>provider</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[odhf_49F56BB14AC34017A9D3288E9E418608]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>130</remote-type>
            <local-name>[unit]</local-name>
            <parent-name>[odhf]</parent-name>
            <remote-alias>unit</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[odhf_49F56BB14AC34017A9D3288E9E418608]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>street_no</remote-name>
            <remote-type>130</remote-type>
            <local-name>[street_no]</local-name>
            <parent-name>[odhf]</parent-name>
            <remote-alias>street_no</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[odhf_49F56BB14AC34017A9D3288E9E418608]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>street_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[street_name]</local-name>
            <parent-name>[odhf]</parent-name>
            <remote-alias>street_name</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[odhf_49F56BB14AC34017A9D3288E9E418608]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>postal_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[postal_code]</local-name>
            <parent-name>[odhf]</parent-name>
            <remote-alias>postal_code</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[odhf_49F56BB14AC34017A9D3288E9E418608]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[odhf]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[odhf_49F56BB14AC34017A9D3288E9E418608]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>province</remote-name>
            <remote-type>130</remote-type>
            <local-name>[province]</local-name>
            <parent-name>[odhf]</parent-name>
            <remote-alias>province</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[odhf_49F56BB14AC34017A9D3288E9E418608]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source_format_str_address</remote-name>
            <remote-type>130</remote-type>
            <local-name>[source_format_str_address]</local-name>
            <parent-name>[odhf]</parent-name>
            <remote-alias>source_format_str_address</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[odhf_49F56BB14AC34017A9D3288E9E418608]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CSDname</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CSDname]</local-name>
            <parent-name>[odhf]</parent-name>
            <remote-alias>CSDname</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[odhf_49F56BB14AC34017A9D3288E9E418608]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CSDuid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CSDuid]</local-name>
            <parent-name>[odhf]</parent-name>
            <remote-alias>CSDuid</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[odhf_49F56BB14AC34017A9D3288E9E418608]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pruid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Pruid]</local-name>
            <parent-name>[odhf]</parent-name>
            <remote-alias>Pruid</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[odhf_49F56BB14AC34017A9D3288E9E418608]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[odhf]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[odhf_49F56BB14AC34017A9D3288E9E418608]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[odhf]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[odhf_49F56BB14AC34017A9D3288E9E418608]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='CS Dname' datatype='string' name='[CSDname]' role='dimension' type='nominal' />
      <column caption='CS Duid' datatype='integer' name='[CSDuid]' role='measure' type='quantitative' />
      <column caption='Provider Count' datatype='integer' name='[Calculation_1111263273656418304]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([provider])' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='odhf' datatype='table' name='[__tableau_internal_object_id__].[odhf_49F56BB14AC34017A9D3288E9E418608]' role='measure' type='quantitative' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Facility Name' datatype='string' name='[facility_name]' role='dimension' type='nominal' />
      <column caption='Index' datatype='string' name='[index]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Odhf Facility Type' datatype='string' name='[odhf_facility_type]' role='dimension' type='nominal' />
      <column caption='Postal Code' datatype='string' name='[postal_code]' role='dimension' type='nominal' />
      <column caption='Provider' datatype='string' name='[provider]' role='dimension' type='nominal' />
      <column caption='Province' datatype='string' name='[province]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <aliases>
          <alias key='&quot;ab&quot;' value='Alberta' />
          <alias key='&quot;bc&quot;' value='British Columbia' />
          <alias key='&quot;mb&quot;' value='Manitoba' />
          <alias key='&quot;nb&quot;' value='New Brunswick' />
          <alias key='&quot;nl&quot;' value='NewFoundland' />
          <alias key='&quot;ns&quot;' value='Nova Scotia' />
          <alias key='&quot;nt&quot;' value='Northwest Territories' />
          <alias key='&quot;nu&quot;' value='Nunavut' />
          <alias key='&quot;on&quot;' value='Ontario' />
          <alias key='&quot;pe&quot;' value='Prince Edward Island' />
          <alias key='&quot;qc&quot;' value='Quebec' />
          <alias key='&quot;sk&quot;' value='Saskatchwen' />
          <alias key='&quot;yt&quot;' value='Yukon' />
        </aliases>
      </column>
      <column caption='Source Facility Type' datatype='string' name='[source_facility_type]' role='dimension' type='nominal' />
      <column caption='Source Format Str Address' datatype='string' name='[source_format_str_address]' role='dimension' type='nominal' />
      <column caption='Street Name' datatype='string' name='[street_name]' role='dimension' type='nominal' />
      <column caption='Street No' datatype='string' name='[street_no]' role='dimension' type='nominal' />
      <column caption='Unit' datatype='string' name='[unit]' role='dimension' type='nominal' />
      <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
      <column-instance column='[odhf_facility_type]' derivation='None' name='[none:odhf_facility_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[provider]' derivation='None' name='[none:provider:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='province, city'>
          <field>[province]</field>
          <field>[city]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:city:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;buchans&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;glace bay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;hamilton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;kelowna&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;lascie&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;leduc&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;margate&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;old crow&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;saskatoon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;stephenville crossing&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;advocate harbour&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;alberton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ambrose&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;barrie&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;bathurst&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;beaver creek&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;bonnyville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;cambridge bay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;carnduff&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cartwright&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;fort simpson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;gaultois&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;peterborough&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;roddickton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;tyne valley&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;vancouver&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;belleoram&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;bible hill&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;cambridge&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;coquitlam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;crapaud&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;destruction bay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;edmonton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;grand falls-windsor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;miramichi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;moose jaw&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;st brendans&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;thunder bay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;yellowknife&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;fredericton&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;inuvik&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;winnipeg&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;change islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;london&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;mount herbert&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;musgrave harbour&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;new glasgow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;new westminster&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ponoka&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wareham-Centreville&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;watson lake&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;burgeo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;halifax&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;kawartha lakes&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;langley&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;lethbridge&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;lewisporte&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;miscouche&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;pelly crossing&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;summerford&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;weyburn&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;bonavista&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;bridgewater&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;chatham-kent&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;delta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;eldon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;faro&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;fort mcmurray&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;happy valley-goose bay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;north battleford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;st johns&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;timmins&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;saint john&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;campbell river&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;gambo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ottawa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;rencontre east&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;salmon arm&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;summerside&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;wolfville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;amherst&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;badgers quay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;brampton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;calgary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;carcross&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;charlottetown&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;fort quappelle&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;glovertown&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;sault ste marie&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;springdale&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;vernon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;wellington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;abbotsford&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;fogo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;orillia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;port aux basques&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;prince george&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;quispamsis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;rankin inlet&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;souris&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;truro&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;botwood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;cornwall&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;dartmouth&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;duncan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;fort saskatchewan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;haines junction&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;harbour breton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;hunter river&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;prince albert&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;st lawrence&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;toronto&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;clarenville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;mississauga&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;norris point&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;north rustico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;north sydney&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;north vancouver&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;red deer&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;whitbourne&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;whitehorse&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;corner brook&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;niagara falls&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;o&apos;leary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;old perlican&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;pictou&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;port coquitlam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;sherwood park&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;whitehose&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;burnaby&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;forteau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;oshawa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;port saunders&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;richmond&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;stratford&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;windsor&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;chilliwack&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;gander&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;owen sound&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;robert&apos;s arm&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;surrey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;tignish&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;burin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;dieppe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;hay river&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;kentville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;kingston&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;lloydminster&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;maple ridge&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;montague&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;mount carmel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ross river&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;stonewall&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;twillingate&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;iqaluit&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;moncton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;brookfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;enfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;grande prairie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;guelph&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;kamloops&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;kensington&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;labrador city&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;mayo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;regina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;stephenville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;vaughan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;antigonish&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;baie verte&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;brantford&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;campbellton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;camrose&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;carmacks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;clinton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;fort smith&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;grand bank&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;kipling&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;selkirk&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;st albans&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;st catharines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;victoria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;eastport&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;oakville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;oleary&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;placentia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;powell river&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;st albert&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;sydney&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;carbonear&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;kitchener&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;medicine hat&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;meteghan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;morell&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;mount pearl&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;nanaimo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;teslin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;victoria cove&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;yorkton&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;riverview&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;bell island&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;berwick&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;burlington&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;claresholm&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;clyde river&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;dawson city&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;grand falls&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;st anthony&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;sudbury&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:provider:nk]' palette='tableau20_10_0' type='palette'>
            <map to='#79706e'>
              <bucket>&quot;Public Health Agency of Canada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canadian Institute for Health Information&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Province of Alberta&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Province of British Columbia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saskatchewan Health Authorities&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:odhf_facility_type:nk]' palette='tableau20_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Ambulatory health care services&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nursing and residential care facilities&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hospitals&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='odhf' id='odhf_49F56BB14AC34017A9D3288E9E418608'>
            <properties context=''>
              <relation connection='excel-direct.13id5aq0gyrk3q1clod480d53wyi' name='odhf' table='[odhf$]' type='table'>
                <columns gridOrigin='A1:Q7034:no:A1:Q7034:1' header='yes' lost='0' outcome='1' processed='38216'>
                  <column datatype='string' name='index' ordinal='0' />
                  <column datatype='string' name='facility_name' ordinal='1' />
                  <column datatype='string' name='source_facility_type' ordinal='2' />
                  <column datatype='string' name='odhf_facility_type' ordinal='3' />
                  <column datatype='string' name='provider' ordinal='4' />
                  <column datatype='string' name='unit' ordinal='5' />
                  <column datatype='string' name='street_no' ordinal='6' />
                  <column datatype='string' name='street_name' ordinal='7' />
                  <column datatype='string' name='postal_code' ordinal='8' />
                  <column datatype='string' name='city' ordinal='9' />
                  <column datatype='string' name='province' ordinal='10' />
                  <column datatype='string' name='source_format_str_address' ordinal='11' />
                  <column datatype='string' name='CSDname' ordinal='12' />
                  <column datatype='integer' name='CSDuid' ordinal='13' />
                  <column datatype='integer' name='Pruid' ordinal='14' />
                  <column datatype='real' name='latitude' ordinal='15' />
                  <column datatype='real' name='longitude' ordinal='16' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Q1. A'>
      <layout-options export-color-legend='false' export-no-caption='true'>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontsize='14'>Cities having most of the Facility types in each province</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text />
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='odhf (odhf_XLS)' name='federated.1hbb8w503obnen1fz9wgp015rf1i' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1hbb8w503obnen1fz9wgp015rf1i'>
            <_.fcp.ObjectModelTableType.false...column caption='odhf' datatype='integer' name='[__tableau_internal_object_id__].[odhf_DD20A528FB254B989679142C68E86AB3]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[odhf_DD20A528FB254B989679142C68E86AB3]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:odhf_DD20A528FB254B989679142C68E86AB3:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='odhf' datatype='table' name='[__tableau_internal_object_id__].[odhf_DD20A528FB254B989679142C68E86AB3]' role='measure' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[odhf_facility_type]' derivation='None' name='[none:odhf_facility_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[province]' derivation='None' name='[none:province:nk]' pivot='key' type='nominal' />
            <column caption='Odhf Facility Type' datatype='string' name='[odhf_facility_type]' role='dimension' type='nominal' />
            <column caption='Province' datatype='string' name='[province]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;ab&quot;' value='Alberta' />
                <alias key='&quot;bc&quot;' value='British Columbia' />
                <alias key='&quot;mb&quot;' value='Manitoba' />
                <alias key='&quot;nb&quot;' value='New Brunswick' />
                <alias key='&quot;nl&quot;' value='New Foundland and Labrador' />
                <alias key='&quot;ns&quot;' value='Nova Scotia' />
                <alias key='&quot;nt&quot;' value='Northwest Territories' />
                <alias key='&quot;nu&quot;' value='Nunavut' />
                <alias key='&quot;on&quot;' value='Ontario' />
                <alias key='&quot;pe&quot;' value='Prince Edward Island' />
                <alias key='&quot;qc&quot;' value='Quebec' />
                <alias key='&quot;sk&quot;' value='Saskatchewan' />
                <alias key='&quot;yt&quot;' value='Yukon' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[Exclusions (City,Odhf Facility Type,Province)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:city:nk]' />
                <groupfilter function='level-members' level='[none:odhf_facility_type:nk]' />
                <groupfilter function='level-members' level='[none:province:nk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:odhf_facility_type:nk]' member='&quot;Ambulatory health care services&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:province:nk]' member='&quot;bc&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;richmond&quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:province:nk]' member='&quot;on&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;belleville&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;brampton&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;brantford&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;chatham-kent&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;guelph&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;kenora&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;kingston&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;kitchener&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;mississauga&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;north bay&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;oakville&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;owen sound&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;peterborough&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;sarnia&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;sault ste marie&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;st catharines&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;stratford&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;sudbury&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;thunder bay&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;timmins&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;windsor&quot;' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:province:nk]' member='&quot;qc&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;gatineau&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;laval&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;longueuil&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;sherbrooke&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;trois-rivières&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;victoriaville&quot;' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:province:nk]' member='&quot;sk&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;saskatoon&quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:odhf_facility_type:nk]' member='&quot;Hospitals&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:province:nk]' member='&quot;on&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;ottawa&quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:province:nk]' member='&quot;qc&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;gatineau&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;longueuil&quot;' />
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:odhf_facility_type:nk]' member='&quot;Nursing and residential care facilities&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:province:nk]' member='&quot;ab&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;edmonton&quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:province:nk]' member='&quot;bc&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;campbell river&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;chilliwack&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;coquitlam&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;delta&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;duncan&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;kamloops&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;kelowna&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;langley&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;maple ridge&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;nanaimo&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;new westminster&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;north vancouver&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;port coquitlam&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;powell river&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;prince george&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;richmond&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;salmon arm&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;vernon&quot;' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:province:nk]' member='&quot;nb&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;dieppe&quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:province:nk]' member='&quot;on&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;barrie&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;belleville&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;brampton&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;brantford&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;burlington&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;cambridge&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;chatham-kent&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;cornwall&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;guelph&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;kawartha lakes&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;kingston&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;kitchener&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;markham&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;niagara falls&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;oakville&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;orillia&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;oshawa&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;owen sound&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;peterborough&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;richmond hill&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;sarnia&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;sault ste marie&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;st catharines&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;sudbury&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;thunder bay&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;vaughan&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;waterloo&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;welland&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;windsor&quot;' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:province:nk]' member='&quot;qc&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;gatineau&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;laval&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;longueuil&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;saguenay&quot;' />
                          <groupfilter function='member' level='[none:city:nk]' member='&quot;saint-jérôme&quot;' />
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:city:nk]' />
                  <hierarchy name='[none:odhf_facility_type:nk]' />
                  <hierarchy name='[none:province:nk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[__tableau_internal_object_id__].[cnt:odhf_DD20A528FB254B989679142C68E86AB3:qk]' included-values='in-range'>
            <min>10</min>
            <max>206</max>
          </filter>
          <filter class='categorical' column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk]'>
            <groupfilter from='&quot;ab&quot;' function='range' level='[none:province:nk]' to='&quot;yt&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:city:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1hbb8w503obnen1fz9wgp015rf1i].[__tableau_internal_object_id__].[cnt:odhf_DD20A528FB254B989679142C68E86AB3:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk]</column>
            <column>[federated.1hbb8w503obnen1fz9wgp015rf1i].[__tableau_internal_object_id__].[cnt:odhf_DD20A528FB254B989679142C68E86AB3:qk]</column>
            <column>[federated.1hbb8w503obnen1fz9wgp015rf1i].[Exclusions (City,Odhf Facility Type,Province)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1hbb8w503obnen1fz9wgp015rf1i].[__tableau_internal_object_id__].[cnt:odhf_DD20A528FB254B989679142C68E86AB3:qk]' field-type='quantitative' min='0' range-type='fixedminindependentmax' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:city:nk]' value='36' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1hbb8w503obnen1fz9wgp015rf1i].[__tableau_internal_object_id__].[cnt:odhf_DD20A528FB254B989679142C68E86AB3:qk]' num-steps='5' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[__tableau_internal_object_id__].[cnt:odhf_DD20A528FB254B989679142C68E86AB3:qk]' />
              <text column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[__tableau_internal_object_id__].[cnt:odhf_DD20A528FB254B989679142C68E86AB3:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk] / [federated.1hbb8w503obnen1fz9wgp015rf1i].[none:city:nk])</rows>
        <cols>([federated.1hbb8w503obnen1fz9wgp015rf1i].[none:odhf_facility_type:nk] * [federated.1hbb8w503obnen1fz9wgp015rf1i].[__tableau_internal_object_id__].[cnt:odhf_DD20A528FB254B989679142C68E86AB3:qk])</cols>
      </table>
      <simple-id uuid='{B5662D93-B3E5-49EF-BC9A-C20CFBDFE3C2}' />
    </worksheet>
    <worksheet name='Q1. B'>
      <layout-options export-no-caption='true'>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontsize='14'>Cities having most of the Facility types in each province</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text />
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='odhf (odhf_XLS)' name='federated.1hbb8w503obnen1fz9wgp015rf1i' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1hbb8w503obnen1fz9wgp015rf1i'>
            <_.fcp.ObjectModelTableType.false...column caption='odhf' datatype='integer' name='[__tableau_internal_object_id__].[odhf_DD20A528FB254B989679142C68E86AB3]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[odhf_DD20A528FB254B989679142C68E86AB3]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:odhf_DD20A528FB254B989679142C68E86AB3:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='odhf' datatype='table' name='[__tableau_internal_object_id__].[odhf_DD20A528FB254B989679142C68E86AB3]' role='measure' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[odhf_facility_type]' derivation='None' name='[none:odhf_facility_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[province]' derivation='None' name='[none:province:nk]' pivot='key' type='nominal' />
            <column caption='Odhf Facility Type' datatype='string' name='[odhf_facility_type]' role='dimension' type='nominal' />
            <column caption='Province' datatype='string' name='[province]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;ab&quot;' value='Alberta' />
                <alias key='&quot;bc&quot;' value='British Columbia' />
                <alias key='&quot;mb&quot;' value='Manitoba' />
                <alias key='&quot;nb&quot;' value='New Brunswick' />
                <alias key='&quot;nl&quot;' value='New Foundland and Labrador' />
                <alias key='&quot;ns&quot;' value='Nova Scotia' />
                <alias key='&quot;nt&quot;' value='Northwest Territories' />
                <alias key='&quot;nu&quot;' value='Nunavut' />
                <alias key='&quot;on&quot;' value='Ontario' />
                <alias key='&quot;pe&quot;' value='Prince Edward Island' />
                <alias key='&quot;qc&quot;' value='Quebec' />
                <alias key='&quot;sk&quot;' value='Saskatchewan' />
                <alias key='&quot;yt&quot;' value='Yukon' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[Exclusions (City,Odhf Facility Type,Province)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:city:nk]' />
                <groupfilter function='level-members' level='[none:odhf_facility_type:nk]' />
                <groupfilter function='level-members' level='[none:province:nk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:province:nk]' member='&quot;nl&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:odhf_facility_type:nk]' member='&quot;Ambulatory health care services&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;ambrose&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;belleoram&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;botwood&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;burin&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;change islands&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;eastport&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;gambo&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;gander&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;gaultois&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;glovertown&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;grand falls-windsor&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;labrador city&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;lascie&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;mount carmel&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;musgrave harbour&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;robert&apos;s arm&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;st brendans&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:odhf_facility_type:nk]' member='&quot;Hospitals&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;badgers quay&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;baie verte&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;bell island&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;bonavista&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;brookfield&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;buchans&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;burgeo&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;carbonear&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;clarenville&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;corner brook&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;fogo&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;forteau&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;gander&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;grand falls-windsor&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;happy valley-goose bay&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;harbour breton&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;labrador city&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;old perlican&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;port aux basques&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;port saunders&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;roddickton&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;springdale&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:odhf_facility_type:nk]' member='&quot;Nursing and residential care facilities&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;botwood&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;carbonear&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;corner brook&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;gander&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;grand bank&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;grand falls&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;happy valley-goose bay&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;lewisporte&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;mount pearl&quot;' />
                        <groupfilter function='member' level='[none:city:nk]' member='&quot;springdale&quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:city:nk]' />
                  <hierarchy name='[none:odhf_facility_type:nk]' />
                  <hierarchy name='[none:province:nk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[__tableau_internal_object_id__].[cnt:odhf_DD20A528FB254B989679142C68E86AB3:qk]' included-values='in-range'>
            <min>1</min>
            <max>10</max>
          </filter>
          <filter class='categorical' column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:province:nk]' member='&quot;nl&quot;' />
              <groupfilter function='member' level='[none:province:nk]' member='&quot;nt&quot;' />
              <groupfilter function='member' level='[none:province:nk]' member='&quot;nu&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:city:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1hbb8w503obnen1fz9wgp015rf1i].[__tableau_internal_object_id__].[cnt:odhf_DD20A528FB254B989679142C68E86AB3:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk]</column>
            <column>[federated.1hbb8w503obnen1fz9wgp015rf1i].[__tableau_internal_object_id__].[cnt:odhf_DD20A528FB254B989679142C68E86AB3:qk]</column>
            <column>[federated.1hbb8w503obnen1fz9wgp015rf1i].[Exclusions (City,Odhf Facility Type,Province)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:city:nk]' value='31' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1hbb8w503obnen1fz9wgp015rf1i].[__tableau_internal_object_id__].[cnt:odhf_DD20A528FB254B989679142C68E86AB3:qk]' num-steps='5' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:odhf_facility_type:nk]' />
              <text column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[__tableau_internal_object_id__].[cnt:odhf_DD20A528FB254B989679142C68E86AB3:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk] / [federated.1hbb8w503obnen1fz9wgp015rf1i].[none:city:nk])</rows>
        <cols>([federated.1hbb8w503obnen1fz9wgp015rf1i].[none:odhf_facility_type:nk] * [federated.1hbb8w503obnen1fz9wgp015rf1i].[__tableau_internal_object_id__].[cnt:odhf_DD20A528FB254B989679142C68E86AB3:qk])</cols>
      </table>
      <simple-id uuid='{C2972D83-13BF-4448-87F0-0968E925409D}' />
    </worksheet>
    <worksheet name='Q2. A'>
      <layout-options export-color-legend='false' export-no-caption='true'>
        <title>
          <formatted-text>
            <run bold='true'>Total providers based on ODHF facility types and Provinces </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='odhf (odhf_XLS)' name='federated.1hbb8w503obnen1fz9wgp015rf1i' />
          </datasources>
          <datasource-dependencies datasource='federated.1hbb8w503obnen1fz9wgp015rf1i'>
            <column caption='Provider count' datatype='integer' name='[Calculation_1060316304828145664]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([provider])' />
            </column>
            <column-instance column='[odhf_facility_type]' derivation='None' name='[none:odhf_facility_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[provider]' derivation='None' name='[none:provider:nk]' pivot='key' type='nominal' />
            <column-instance column='[province]' derivation='None' name='[none:province:nk]' pivot='key' type='nominal' />
            <column caption='Odhf Facility Type' datatype='string' name='[odhf_facility_type]' role='dimension' type='nominal' />
            <column caption='Provider' datatype='string' name='[provider]' role='dimension' type='nominal' />
            <column caption='Province' datatype='string' name='[province]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;ab&quot;' value='Alberta' />
                <alias key='&quot;bc&quot;' value='British Columbia' />
                <alias key='&quot;mb&quot;' value='Manitoba' />
                <alias key='&quot;nb&quot;' value='New Brunswick' />
                <alias key='&quot;nl&quot;' value='New Foundland and Labrador' />
                <alias key='&quot;ns&quot;' value='Nova Scotia' />
                <alias key='&quot;nt&quot;' value='Northwest Territories' />
                <alias key='&quot;nu&quot;' value='Nunavut' />
                <alias key='&quot;on&quot;' value='Ontario' />
                <alias key='&quot;pe&quot;' value='Prince Edward Island' />
                <alias key='&quot;qc&quot;' value='Quebec' />
                <alias key='&quot;sk&quot;' value='Saskatchewan' />
                <alias key='&quot;yt&quot;' value='Yukon' />
              </aliases>
            </column>
            <column-instance column='[Calculation_1060316304828145664]' derivation='User' name='[usr:Calculation_1060316304828145664:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk]'>
            <groupfilter from='&quot;ab&quot;' function='range' level='[none:province:nk]' to='&quot;nt&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:provider:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_1060316304828145664:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:provider:nk]' value='34' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:provider:nk]' value='364' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:odhf_facility_type:nk]' />
              <text column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_1060316304828145664:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk] / [federated.1hbb8w503obnen1fz9wgp015rf1i].[none:provider:nk])</rows>
        <cols>([federated.1hbb8w503obnen1fz9wgp015rf1i].[none:odhf_facility_type:nk] * [federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_1060316304828145664:qk])</cols>
      </table>
      <simple-id uuid='{48DC3CC8-4D65-4B78-A12F-721FEF08C976}' />
    </worksheet>
    <worksheet name='Q2.B'>
      <layout-options export-color-legend='false' export-no-caption='true'>
        <title>
          <formatted-text>
            <run bold='true'>Total providers based on ODHF facility types and Provinces </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='odhf (odhf_XLS)' name='federated.1hbb8w503obnen1fz9wgp015rf1i' />
          </datasources>
          <datasource-dependencies datasource='federated.1hbb8w503obnen1fz9wgp015rf1i'>
            <column caption='Provider count' datatype='integer' name='[Calculation_1060316304828145664]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([provider])' />
            </column>
            <column-instance column='[odhf_facility_type]' derivation='None' name='[none:odhf_facility_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[provider]' derivation='None' name='[none:provider:nk]' pivot='key' type='nominal' />
            <column-instance column='[province]' derivation='None' name='[none:province:nk]' pivot='key' type='nominal' />
            <column caption='Odhf Facility Type' datatype='string' name='[odhf_facility_type]' role='dimension' type='nominal' />
            <column caption='Provider' datatype='string' name='[provider]' role='dimension' type='nominal' />
            <column caption='Province' datatype='string' name='[province]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;ab&quot;' value='Alberta' />
                <alias key='&quot;bc&quot;' value='British Columbia' />
                <alias key='&quot;mb&quot;' value='Manitoba' />
                <alias key='&quot;nb&quot;' value='New Brunswick' />
                <alias key='&quot;nl&quot;' value='New Foundland and Labrador' />
                <alias key='&quot;ns&quot;' value='Nova Scotia' />
                <alias key='&quot;nt&quot;' value='Northwest Territories' />
                <alias key='&quot;nu&quot;' value='Nunavut' />
                <alias key='&quot;on&quot;' value='Ontario' />
                <alias key='&quot;pe&quot;' value='Prince Edward Island' />
                <alias key='&quot;qc&quot;' value='Quebec' />
                <alias key='&quot;sk&quot;' value='Saskatchewan' />
                <alias key='&quot;yt&quot;' value='Yukon' />
              </aliases>
            </column>
            <column-instance column='[Calculation_1060316304828145664]' derivation='User' name='[usr:Calculation_1060316304828145664:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:province:nk]' member='&quot;nu&quot;' />
              <groupfilter function='member' level='[none:province:nk]' member='&quot;on&quot;' />
              <groupfilter function='member' level='[none:province:nk]' member='&quot;pe&quot;' />
              <groupfilter function='member' level='[none:province:nk]' member='&quot;qc&quot;' />
              <groupfilter function='member' level='[none:province:nk]' member='&quot;sk&quot;' />
              <groupfilter function='member' level='[none:province:nk]' member='&quot;yt&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:provider:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_1060316304828145664:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:provider:nk]' value='27' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:provider:nk]' value='372' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:odhf_facility_type:nk]' />
              <text column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_1060316304828145664:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk] / [federated.1hbb8w503obnen1fz9wgp015rf1i].[none:provider:nk])</rows>
        <cols>([federated.1hbb8w503obnen1fz9wgp015rf1i].[none:odhf_facility_type:nk] * [federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_1060316304828145664:qk])</cols>
      </table>
      <simple-id uuid='{84D29504-6D44-4351-B05D-88C3BC52EEED}' />
    </worksheet>
    <worksheet name='Q3.A'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Source facility types provided by providers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='odhf (odhf_XLS)' name='federated.1hbb8w503obnen1fz9wgp015rf1i' />
          </datasources>
          <datasource-dependencies datasource='federated.1hbb8w503obnen1fz9wgp015rf1i'>
            <column caption='Source Facility type count' datatype='integer' name='[Calculation_562950019235213312]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([source_facility_type])' />
            </column>
            <column-instance column='[provider]' derivation='None' name='[none:provider:nk]' pivot='key' type='nominal' />
            <column-instance column='[province]' derivation='None' name='[none:province:nk]' pivot='key' type='nominal' />
            <column-instance column='[source_facility_type]' derivation='None' name='[none:source_facility_type:nk]' pivot='key' type='nominal' />
            <column caption='Provider' datatype='string' name='[provider]' role='dimension' type='nominal' />
            <column caption='Province' datatype='string' name='[province]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;ab&quot;' value='Alberta' />
                <alias key='&quot;bc&quot;' value='British Columbia' />
                <alias key='&quot;mb&quot;' value='Manitoba' />
                <alias key='&quot;nb&quot;' value='New Brunswick' />
                <alias key='&quot;nl&quot;' value='New Foundland and Labrador' />
                <alias key='&quot;ns&quot;' value='Nova Scotia' />
                <alias key='&quot;nt&quot;' value='Northwest Territories' />
                <alias key='&quot;nu&quot;' value='Nunavut' />
                <alias key='&quot;on&quot;' value='Ontario' />
                <alias key='&quot;pe&quot;' value='Prince Edward Island' />
                <alias key='&quot;qc&quot;' value='Quebec' />
                <alias key='&quot;sk&quot;' value='Saskatchewan' />
                <alias key='&quot;yt&quot;' value='Yukon' />
              </aliases>
            </column>
            <column caption='Source Facility Type' datatype='string' name='[source_facility_type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;active acute hospital&quot;' value='Active acute hospital' />
                <alias key='&quot;general&quot;' value='General' />
                <alias key='&quot;other&quot;' value='Other' />
              </aliases>
            </column>
            <column-instance column='[Calculation_562950019235213312]' derivation='User' name='[usr:Calculation_562950019235213312:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:province:nk]' member='&quot;ab&quot;' />
              <groupfilter function='member' level='[none:province:nk]' member='&quot;bc&quot;' />
              <groupfilter function='member' level='[none:province:nk]' member='&quot;mb&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_562950019235213312:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:source_facility_type:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_562950019235213312:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk]</column>
            <column>[federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_562950019235213312:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_562950019235213312:qk]' field-type='quantitative' range-type='uniform' scope='cols' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:source_facility_type:nk]' value='220' />
            <format attr='width' field='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:provider:nk]' value='188' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk]' />
              <text column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_562950019235213312:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hbb8w503obnen1fz9wgp015rf1i].[none:provider:nk] / [federated.1hbb8w503obnen1fz9wgp015rf1i].[none:source_facility_type:nk])</rows>
        <cols>([federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk] * [federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_562950019235213312:qk])</cols>
      </table>
      <simple-id uuid='{3CE26248-8721-4924-8908-DF3BF023D4AA}' />
    </worksheet>
    <worksheet name='Q3.B'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Source facility types provided by providers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='odhf (odhf_XLS)' name='federated.1hbb8w503obnen1fz9wgp015rf1i' />
          </datasources>
          <datasource-dependencies datasource='federated.1hbb8w503obnen1fz9wgp015rf1i'>
            <column caption='Source Facility type count' datatype='integer' name='[Calculation_562950019235213312]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([source_facility_type])' />
            </column>
            <column-instance column='[provider]' derivation='None' name='[none:provider:nk]' pivot='key' type='nominal' />
            <column-instance column='[province]' derivation='None' name='[none:province:nk]' pivot='key' type='nominal' />
            <column-instance column='[source_facility_type]' derivation='None' name='[none:source_facility_type:nk]' pivot='key' type='nominal' />
            <column caption='Provider' datatype='string' name='[provider]' role='dimension' type='nominal' />
            <column caption='Province' datatype='string' name='[province]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;ab&quot;' value='Alberta' />
                <alias key='&quot;bc&quot;' value='British Columbia' />
                <alias key='&quot;mb&quot;' value='Manitoba' />
                <alias key='&quot;nb&quot;' value='New Brunswick' />
                <alias key='&quot;nl&quot;' value='New Foundland and Labrador' />
                <alias key='&quot;ns&quot;' value='Nova Scotia' />
                <alias key='&quot;nt&quot;' value='Northwest Territories' />
                <alias key='&quot;nu&quot;' value='Nunavut' />
                <alias key='&quot;on&quot;' value='Ontario' />
                <alias key='&quot;pe&quot;' value='Prince Edward Island' />
                <alias key='&quot;qc&quot;' value='Quebec' />
                <alias key='&quot;sk&quot;' value='Saskatchewan' />
                <alias key='&quot;yt&quot;' value='Yukon' />
              </aliases>
            </column>
            <column caption='Source Facility Type' datatype='string' name='[source_facility_type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;active acute hospital&quot;' value='Active acute hospital' />
                <alias key='&quot;general&quot;' value='General' />
                <alias key='&quot;other&quot;' value='Other' />
              </aliases>
            </column>
            <column-instance column='[Calculation_562950019235213312]' derivation='User' name='[usr:Calculation_562950019235213312:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:province:nk]' member='&quot;nb&quot;' />
              <groupfilter function='member' level='[none:province:nk]' member='&quot;nl&quot;' />
              <groupfilter function='member' level='[none:province:nk]' member='&quot;ns&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_562950019235213312:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:source_facility_type:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_562950019235213312:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk]</column>
            <column>[federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_562950019235213312:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_562950019235213312:qk]' field-type='quantitative' range-type='uniform' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:source_facility_type:nk]' value='35' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:source_facility_type:nk]' value='220' />
            <format attr='width' field='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:provider:nk]' value='188' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk]' />
              <text column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_562950019235213312:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hbb8w503obnen1fz9wgp015rf1i].[none:provider:nk] / [federated.1hbb8w503obnen1fz9wgp015rf1i].[none:source_facility_type:nk])</rows>
        <cols>([federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk] * [federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_562950019235213312:qk])</cols>
      </table>
      <simple-id uuid='{BEA88238-869D-4951-B6F4-B04C747D9EBD}' />
    </worksheet>
    <worksheet name='Q3.C'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Source facility types provided by providers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='odhf (odhf_XLS)' name='federated.1hbb8w503obnen1fz9wgp015rf1i' />
          </datasources>
          <datasource-dependencies datasource='federated.1hbb8w503obnen1fz9wgp015rf1i'>
            <column caption='Source Facility type count' datatype='integer' name='[Calculation_562950019235213312]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([source_facility_type])' />
            </column>
            <column-instance column='[provider]' derivation='None' name='[none:provider:nk]' pivot='key' type='nominal' />
            <column-instance column='[province]' derivation='None' name='[none:province:nk]' pivot='key' type='nominal' />
            <column-instance column='[source_facility_type]' derivation='None' name='[none:source_facility_type:nk]' pivot='key' type='nominal' />
            <column caption='Provider' datatype='string' name='[provider]' role='dimension' type='nominal' />
            <column caption='Province' datatype='string' name='[province]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;ab&quot;' value='Alberta' />
                <alias key='&quot;bc&quot;' value='British Columbia' />
                <alias key='&quot;mb&quot;' value='Manitoba' />
                <alias key='&quot;nb&quot;' value='New Brunswick' />
                <alias key='&quot;nl&quot;' value='New Foundland and Labrador' />
                <alias key='&quot;ns&quot;' value='Nova Scotia' />
                <alias key='&quot;nt&quot;' value='Northwest Territories' />
                <alias key='&quot;nu&quot;' value='Nunavut' />
                <alias key='&quot;on&quot;' value='Ontario' />
                <alias key='&quot;pe&quot;' value='Prince Edward Island' />
                <alias key='&quot;qc&quot;' value='Quebec' />
                <alias key='&quot;sk&quot;' value='Saskatchewan' />
                <alias key='&quot;yt&quot;' value='Yukon' />
              </aliases>
            </column>
            <column caption='Source Facility Type' datatype='string' name='[source_facility_type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;active acute hospital&quot;' value='Active acute hospital' />
                <alias key='&quot;general&quot;' value='General' />
                <alias key='&quot;other&quot;' value='Other' />
              </aliases>
            </column>
            <column-instance column='[Calculation_562950019235213312]' derivation='User' name='[usr:Calculation_562950019235213312:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:province:nk]' member='&quot;nt&quot;' />
              <groupfilter function='member' level='[none:province:nk]' member='&quot;nu&quot;' />
              <groupfilter function='member' level='[none:province:nk]' member='&quot;on&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;on&quot;</bucket>
              <bucket>&quot;ns&quot;</bucket>
              <bucket>&quot;nt&quot;</bucket>
              <bucket>&quot;nu&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_562950019235213312:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:source_facility_type:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_562950019235213312:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk]</column>
            <column>[federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_562950019235213312:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_562950019235213312:qk]' field-type='quantitative' range-type='uniform' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:source_facility_type:nk]' value='22' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:source_facility_type:nk]' value='220' />
            <format attr='width' field='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:provider:nk]' value='188' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk]' />
              <text column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_562950019235213312:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hbb8w503obnen1fz9wgp015rf1i].[none:provider:nk] / [federated.1hbb8w503obnen1fz9wgp015rf1i].[none:source_facility_type:nk])</rows>
        <cols>([federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk] * [federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_562950019235213312:qk])</cols>
      </table>
      <simple-id uuid='{4003E0CF-F9F8-46E1-A2A9-CD9B2BB759AC}' />
    </worksheet>
    <worksheet name='Q3.D'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Source facility types provided by providers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='odhf (odhf_XLS)' name='federated.1hbb8w503obnen1fz9wgp015rf1i' />
          </datasources>
          <datasource-dependencies datasource='federated.1hbb8w503obnen1fz9wgp015rf1i'>
            <column caption='Source Facility type count' datatype='integer' name='[Calculation_562950019235213312]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([source_facility_type])' />
            </column>
            <column-instance column='[provider]' derivation='None' name='[none:provider:nk]' pivot='key' type='nominal' />
            <column-instance column='[province]' derivation='None' name='[none:province:nk]' pivot='key' type='nominal' />
            <column-instance column='[source_facility_type]' derivation='None' name='[none:source_facility_type:nk]' pivot='key' type='nominal' />
            <column caption='Provider' datatype='string' name='[provider]' role='dimension' type='nominal' />
            <column caption='Province' datatype='string' name='[province]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;ab&quot;' value='Alberta' />
                <alias key='&quot;bc&quot;' value='British Columbia' />
                <alias key='&quot;mb&quot;' value='Manitoba' />
                <alias key='&quot;nb&quot;' value='New Brunswick' />
                <alias key='&quot;nl&quot;' value='New Foundland and Labrador' />
                <alias key='&quot;ns&quot;' value='Nova Scotia' />
                <alias key='&quot;nt&quot;' value='Northwest Territories' />
                <alias key='&quot;nu&quot;' value='Nunavut' />
                <alias key='&quot;on&quot;' value='Ontario' />
                <alias key='&quot;pe&quot;' value='Prince Edward Island' />
                <alias key='&quot;qc&quot;' value='Quebec' />
                <alias key='&quot;sk&quot;' value='Saskatchewan' />
                <alias key='&quot;yt&quot;' value='Yukon' />
              </aliases>
            </column>
            <column caption='Source Facility Type' datatype='string' name='[source_facility_type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;active acute hospital&quot;' value='Active acute hospital' />
                <alias key='&quot;general&quot;' value='General' />
                <alias key='&quot;other&quot;' value='Other' />
              </aliases>
            </column>
            <column-instance column='[Calculation_562950019235213312]' derivation='User' name='[usr:Calculation_562950019235213312:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:province:nk]' member='&quot;pe&quot;' />
              <groupfilter function='member' level='[none:province:nk]' member='&quot;sk&quot;' />
              <groupfilter function='member' level='[none:province:nk]' member='&quot;yt&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;on&quot;</bucket>
              <bucket>&quot;ns&quot;</bucket>
              <bucket>&quot;nt&quot;</bucket>
              <bucket>&quot;nu&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_562950019235213312:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:source_facility_type:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_562950019235213312:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk]</column>
            <column>[federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_562950019235213312:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_562950019235213312:qk]' field-type='quantitative' range-type='uniform' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:source_facility_type:nk]' value='22' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:source_facility_type:nk]' value='220' />
            <format attr='width' field='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:provider:nk]' value='188' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:provider:nk]' />
              <text column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_562950019235213312:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='1694' />
                <format attr='maxheight' value='1694' />
                <format attr='minwidth' value='250' />
                <format attr='maxwidth' value='250' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk] / [federated.1hbb8w503obnen1fz9wgp015rf1i].[none:source_facility_type:nk])</rows>
        <cols>([federated.1hbb8w503obnen1fz9wgp015rf1i].[none:provider:nk] * [federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_562950019235213312:qk])</cols>
      </table>
      <simple-id uuid='{5A7E7F01-AD33-4A4B-858F-E7AC0D091082}' />
    </worksheet>
    <worksheet name='Q3.E'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Source facility types provided by providers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='odhf (odhf_XLS)' name='federated.1hbb8w503obnen1fz9wgp015rf1i' />
          </datasources>
          <datasource-dependencies datasource='federated.1hbb8w503obnen1fz9wgp015rf1i'>
            <column caption='Source Facility type count' datatype='integer' name='[Calculation_562950019235213312]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([source_facility_type])' />
            </column>
            <column-instance column='[provider]' derivation='None' name='[none:provider:nk]' pivot='key' type='nominal' />
            <column-instance column='[province]' derivation='None' name='[none:province:nk]' pivot='key' type='nominal' />
            <column-instance column='[source_facility_type]' derivation='None' name='[none:source_facility_type:nk]' pivot='key' type='nominal' />
            <column caption='Provider' datatype='string' name='[provider]' role='dimension' type='nominal' />
            <column caption='Province' datatype='string' name='[province]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;ab&quot;' value='Alberta' />
                <alias key='&quot;bc&quot;' value='British Columbia' />
                <alias key='&quot;mb&quot;' value='Manitoba' />
                <alias key='&quot;nb&quot;' value='New Brunswick' />
                <alias key='&quot;nl&quot;' value='New Foundland and Labrador' />
                <alias key='&quot;ns&quot;' value='Nova Scotia' />
                <alias key='&quot;nt&quot;' value='Northwest Territories' />
                <alias key='&quot;nu&quot;' value='Nunavut' />
                <alias key='&quot;on&quot;' value='Ontario' />
                <alias key='&quot;pe&quot;' value='Prince Edward Island' />
                <alias key='&quot;qc&quot;' value='Quebec' />
                <alias key='&quot;sk&quot;' value='Saskatchewan' />
                <alias key='&quot;yt&quot;' value='Yukon' />
              </aliases>
            </column>
            <column caption='Source Facility Type' datatype='string' name='[source_facility_type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;active acute hospital&quot;' value='Active acute hospital' />
                <alias key='&quot;general&quot;' value='General' />
                <alias key='&quot;other&quot;' value='Other' />
              </aliases>
            </column>
            <column-instance column='[Calculation_562950019235213312]' derivation='User' name='[usr:Calculation_562950019235213312:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk]'>
            <groupfilter function='member' level='[none:province:nk]' member='&quot;qc&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;on&quot;</bucket>
              <bucket>&quot;ns&quot;</bucket>
              <bucket>&quot;nt&quot;</bucket>
              <bucket>&quot;nu&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_562950019235213312:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <slices>
            <column>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk]</column>
            <column>[federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_562950019235213312:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_562950019235213312:qk]' />
              <text column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_562950019235213312:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hbb8w503obnen1fz9wgp015rf1i].[none:provider:nk] * [federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_562950019235213312:qk])</rows>
        <cols>([federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk] / [federated.1hbb8w503obnen1fz9wgp015rf1i].[none:source_facility_type:nk])</cols>
      </table>
      <simple-id uuid='{8E16C69C-1A04-4054-A92D-B96DCAF5083B}' />
    </worksheet>
    <worksheet name='Q4.A'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Total ODHF facility types provided by Providers with respect to each Province</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='odhf (odhf_XLS)' name='federated.1hbb8w503obnen1fz9wgp015rf1i' />
          </datasources>
          <datasource-dependencies datasource='federated.1hbb8w503obnen1fz9wgp015rf1i'>
            <_.fcp.ObjectModelTableType.false...column caption='odhf' datatype='integer' name='[__tableau_internal_object_id__].[odhf_DD20A528FB254B989679142C68E86AB3]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[odhf_DD20A528FB254B989679142C68E86AB3]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:odhf_DD20A528FB254B989679142C68E86AB3:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='odhf' datatype='table' name='[__tableau_internal_object_id__].[odhf_DD20A528FB254B989679142C68E86AB3]' role='measure' type='quantitative' />
            <column-instance column='[odhf_facility_type]' derivation='None' name='[none:odhf_facility_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[provider]' derivation='None' name='[none:provider:nk]' pivot='key' type='nominal' />
            <column-instance column='[province]' derivation='None' name='[none:province:nk]' pivot='key' type='nominal' />
            <column caption='Odhf Facility Type' datatype='string' name='[odhf_facility_type]' role='dimension' type='nominal' />
            <column caption='Provider' datatype='string' name='[provider]' role='dimension' type='nominal' />
            <column caption='Province' datatype='string' name='[province]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;ab&quot;' value='Alberta' />
                <alias key='&quot;bc&quot;' value='British Columbia' />
                <alias key='&quot;mb&quot;' value='Manitoba' />
                <alias key='&quot;nb&quot;' value='New Brunswick' />
                <alias key='&quot;nl&quot;' value='New Foundland and Labrador' />
                <alias key='&quot;ns&quot;' value='Nova Scotia' />
                <alias key='&quot;nt&quot;' value='Northwest Territories' />
                <alias key='&quot;nu&quot;' value='Nunavut' />
                <alias key='&quot;on&quot;' value='Ontario' />
                <alias key='&quot;pe&quot;' value='Prince Edward Island' />
                <alias key='&quot;qc&quot;' value='Quebec' />
                <alias key='&quot;sk&quot;' value='Saskatchewan' />
                <alias key='&quot;yt&quot;' value='Yukon' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:province:nk]' member='&quot;ab&quot;' />
              <groupfilter function='member' level='[none:province:nk]' member='&quot;bc&quot;' />
              <groupfilter function='member' level='[none:province:nk]' member='&quot;mb&quot;' />
              <groupfilter function='member' level='[none:province:nk]' member='&quot;nb&quot;' />
              <groupfilter function='member' level='[none:province:nk]' member='&quot;nl&quot;' />
              <groupfilter function='member' level='[none:province:nk]' member='&quot;nt&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:provider:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1hbb8w503obnen1fz9wgp015rf1i].[__tableau_internal_object_id__].[cnt:odhf_DD20A528FB254B989679142C68E86AB3:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:odhf_facility_type:nk]' />
              <text column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[__tableau_internal_object_id__].[cnt:odhf_DD20A528FB254B989679142C68E86AB3:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk] / [federated.1hbb8w503obnen1fz9wgp015rf1i].[none:provider:nk])</rows>
        <cols>([federated.1hbb8w503obnen1fz9wgp015rf1i].[none:odhf_facility_type:nk] * [federated.1hbb8w503obnen1fz9wgp015rf1i].[__tableau_internal_object_id__].[cnt:odhf_DD20A528FB254B989679142C68E86AB3:qk])</cols>
      </table>
      <simple-id uuid='{0A23AF8F-0513-45A2-8022-3A5FF1616BE3}' />
    </worksheet>
    <worksheet name='Q4.B'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Total ODHF facility types provided by Providers with respect to each Province</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='odhf (odhf_XLS)' name='federated.1hbb8w503obnen1fz9wgp015rf1i' />
          </datasources>
          <datasource-dependencies datasource='federated.1hbb8w503obnen1fz9wgp015rf1i'>
            <_.fcp.ObjectModelTableType.false...column caption='odhf' datatype='integer' name='[__tableau_internal_object_id__].[odhf_DD20A528FB254B989679142C68E86AB3]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[odhf_DD20A528FB254B989679142C68E86AB3]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:odhf_DD20A528FB254B989679142C68E86AB3:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='odhf' datatype='table' name='[__tableau_internal_object_id__].[odhf_DD20A528FB254B989679142C68E86AB3]' role='measure' type='quantitative' />
            <column-instance column='[odhf_facility_type]' derivation='None' name='[none:odhf_facility_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[provider]' derivation='None' name='[none:provider:nk]' pivot='key' type='nominal' />
            <column-instance column='[province]' derivation='None' name='[none:province:nk]' pivot='key' type='nominal' />
            <column caption='Odhf Facility Type' datatype='string' name='[odhf_facility_type]' role='dimension' type='nominal' />
            <column caption='Provider' datatype='string' name='[provider]' role='dimension' type='nominal' />
            <column caption='Province' datatype='string' name='[province]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;ab&quot;' value='Alberta' />
                <alias key='&quot;bc&quot;' value='British Columbia' />
                <alias key='&quot;mb&quot;' value='Manitoba' />
                <alias key='&quot;nb&quot;' value='New Brunswick' />
                <alias key='&quot;nl&quot;' value='New Foundland and Labrador' />
                <alias key='&quot;ns&quot;' value='Nova Scotia' />
                <alias key='&quot;nt&quot;' value='Northwest Territories' />
                <alias key='&quot;nu&quot;' value='Nunavut' />
                <alias key='&quot;on&quot;' value='Ontario' />
                <alias key='&quot;pe&quot;' value='Prince Edward Island' />
                <alias key='&quot;qc&quot;' value='Quebec' />
                <alias key='&quot;sk&quot;' value='Saskatchewan' />
                <alias key='&quot;yt&quot;' value='Yukon' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:province:nk]' member='&quot;ns&quot;' />
              <groupfilter from='&quot;nu&quot;' function='range' level='[none:province:nk]' to='&quot;yt&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:provider:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1hbb8w503obnen1fz9wgp015rf1i].[__tableau_internal_object_id__].[cnt:odhf_DD20A528FB254B989679142C68E86AB3:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:odhf_facility_type:nk]' />
              <text column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[__tableau_internal_object_id__].[cnt:odhf_DD20A528FB254B989679142C68E86AB3:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk] / [federated.1hbb8w503obnen1fz9wgp015rf1i].[none:provider:nk])</rows>
        <cols>([federated.1hbb8w503obnen1fz9wgp015rf1i].[none:odhf_facility_type:nk] * [federated.1hbb8w503obnen1fz9wgp015rf1i].[__tableau_internal_object_id__].[cnt:odhf_DD20A528FB254B989679142C68E86AB3:qk])</cols>
      </table>
      <simple-id uuid='{3E92058A-D535-4E6F-A2AA-9CA1484B70B8}' />
    </worksheet>
    <worksheet name='Sheet 13'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{417ACCDF-D416-4B2D-99B8-91F0C6F44BF3}' />
    </worksheet>
    <worksheet name='Summary'>
      <layout-options export-no-caption='true'>
        <title>
          <formatted-text>
            <run bold='true'>Summary of ODHF facility types </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='odhf (odhf_XLS)' name='federated.1hbb8w503obnen1fz9wgp015rf1i' />
          </datasources>
          <datasource-dependencies datasource='federated.1hbb8w503obnen1fz9wgp015rf1i'>
            <_.fcp.ObjectModelTableType.false...column caption='odhf' datatype='integer' name='[__tableau_internal_object_id__].[odhf_DD20A528FB254B989679142C68E86AB3]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[odhf_DD20A528FB254B989679142C68E86AB3]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:odhf_DD20A528FB254B989679142C68E86AB3:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='odhf' datatype='table' name='[__tableau_internal_object_id__].[odhf_DD20A528FB254B989679142C68E86AB3]' role='measure' type='quantitative' />
            <column-instance column='[odhf_facility_type]' derivation='None' name='[none:odhf_facility_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[province]' derivation='None' name='[none:province:nk]' pivot='key' type='nominal' />
            <column caption='Odhf Facility Type' datatype='string' name='[odhf_facility_type]' role='dimension' type='nominal' />
            <column caption='Province' datatype='string' name='[province]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;ab&quot;' value='Alberta' />
                <alias key='&quot;bc&quot;' value='British Columbia' />
                <alias key='&quot;mb&quot;' value='Manitoba' />
                <alias key='&quot;nb&quot;' value='New Brunswick' />
                <alias key='&quot;nl&quot;' value='New Foundland and Labrador' />
                <alias key='&quot;ns&quot;' value='Nova Scotia' />
                <alias key='&quot;nt&quot;' value='Northwest Territories' />
                <alias key='&quot;nu&quot;' value='Nunavut' />
                <alias key='&quot;on&quot;' value='Ontario' />
                <alias key='&quot;pe&quot;' value='Prince Edward Island' />
                <alias key='&quot;qc&quot;' value='Quebec' />
                <alias key='&quot;sk&quot;' value='Saskatchewan' />
                <alias key='&quot;yt&quot;' value='Yukon' />
              </aliases>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:odhf_facility_type:nk]' />
              <text column='[federated.1hbb8w503obnen1fz9wgp015rf1i].[__tableau_internal_object_id__].[cnt:odhf_DD20A528FB254B989679142C68E86AB3:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hbb8w503obnen1fz9wgp015rf1i].[__tableau_internal_object_id__].[cnt:odhf_DD20A528FB254B989679142C68E86AB3:qk]</rows>
        <cols>([federated.1hbb8w503obnen1fz9wgp015rf1i].[none:odhf_facility_type:nk] / [federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk])</cols>
      </table>
      <simple-id uuid='{410F3A68-A358-43D3-A5D8-68C2182CE1C4}' />
    </worksheet>
    <worksheet name='Total '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' italic='true' underline='true'>Total number of facility types in Canada</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='odhf (odhf_XLS) (2)' name='federated.1hbb8w503obnen1fz9wgp015rf1i (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.1hbb8w503obnen1fz9wgp015rf1i (copy)'>
            <_.fcp.ObjectModelTableType.false...column caption='odhf' datatype='integer' name='[__tableau_internal_object_id__].[odhf_49F56BB14AC34017A9D3288E9E418608]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[odhf_49F56BB14AC34017A9D3288E9E418608]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:odhf_49F56BB14AC34017A9D3288E9E418608:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='odhf' datatype='table' name='[__tableau_internal_object_id__].[odhf_49F56BB14AC34017A9D3288E9E418608]' role='measure' type='quantitative' />
            <column-instance column='[odhf_facility_type]' derivation='None' name='[none:odhf_facility_type:nk]' pivot='key' type='nominal' />
            <column caption='Odhf Facility Type' datatype='string' name='[odhf_facility_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' data-class='total' value='14' />
            <format attr='font-size' data-class='subtotal' scope='rows' value='11' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-size' data-class='subtotal' scope='rows' value='11' />
            <format attr='border-width' data-class='total' scope='rows' value='5' />
            <format attr='border-color' data-class='total' scope='rows' value='#000000' />
            <format attr='border-width' data-class='subtotal' scope='rows' value='5' />
            <format attr='border-color' data-class='subtotal' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' scope='rows' value='5' />
            <format attr='border-color' data-class='total' scope='rows' value='#000000' />
            <format attr='border-width' data-class='subtotal' scope='rows' value='5' />
            <format attr='border-color' data-class='subtotal' scope='rows' value='#000000' />
            <format attr='border-width' data-class='total' scope='cols' value='5' />
            <format attr='border-color' data-class='total' scope='cols' value='#000000' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='5' />
            <format attr='stroke-color' scope='rows' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1hbb8w503obnen1fz9wgp015rf1i (copy)].[__tableau_internal_object_id__].[cnt:odhf_49F56BB14AC34017A9D3288E9E418608:qk]' />
              <color column='[federated.1hbb8w503obnen1fz9wgp015rf1i (copy)].[none:odhf_facility_type:nk]' />
              <lod column='[federated.1hbb8w503obnen1fz9wgp015rf1i (copy)].[__tableau_internal_object_id__].[cnt:odhf_49F56BB14AC34017A9D3288E9E418608:qk]' />
              <text column='[federated.1hbb8w503obnen1fz9wgp015rf1i (copy)].[none:odhf_facility_type:nk]' />
              <text column='[federated.1hbb8w503obnen1fz9wgp015rf1i (copy)].[__tableau_internal_object_id__].[cnt:odhf_49F56BB14AC34017A9D3288E9E418608:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{1E2D71AC-0961-488D-94F0-D6C117EDBA04}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones />
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='17' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{FCF5FCB8-BE81-4B42-B795-7B8434357D11}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='75'>
    <window class='worksheet' maximized='true' name='Total '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1hbb8w503obnen1fz9wgp015rf1i (copy)].[none:odhf_facility_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E2BBFD35-90B8-41C1-82FA-835105893A8B}' />
    </window>
    <window class='worksheet' name='Summary'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:odhf_facility_type:nk]</field>
            <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{98A9B72D-ADC7-4923-982C-B74C779F5D18}' />
    </window>
    <window class='worksheet' name='Q1. A'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:city:nk]</field>
            <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:odhf_facility_type:nk]</field>
            <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk]</field>
            <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_562950019235213312:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4F346BB9-9FDE-4FC6-99F3-83E7E0E282C7}' />
    </window>
    <window class='worksheet' name='Q1. B'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:city:nk]</field>
            <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:odhf_facility_type:nk]</field>
            <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_562950019235213312:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{25792A84-1903-47C5-B3D0-DB025D4E51C2}' />
    </window>
    <window class='worksheet' name='Q2. A'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:odhf_facility_type:nk]</field>
            <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:provider:nk]</field>
            <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{74AE3259-510F-494C-8003-B845E564F174}' />
    </window>
    <window class='worksheet' name='Q2.B'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:odhf_facility_type:nk]</field>
            <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:provider:nk]</field>
            <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{35987402-ABD6-4C37-962C-07BB69A5331A}' />
    </window>
    <window class='worksheet' name='Q3.A'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:provider:nk]</field>
            <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk]</field>
            <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:source_facility_type:nk]</field>
            <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_834291898582269953:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C6D3803D-77F6-4C1C-BAEF-ED346F76C376}' />
    </window>
    <window class='worksheet' name='Q3.B'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:provider:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Province of Nova Scotia&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:provider:nk]</field>
            <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk]</field>
            <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:source_facility_type:nk]</field>
            <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_834291898582269953:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{95517704-0B9F-4A57-AF6A-6CBD88F4D1ED}' />
    </window>
    <window class='worksheet' name='Q3.C'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:provider:nk]</field>
            <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk]</field>
            <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:source_facility_type:nk]</field>
            <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_834291898582269953:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0BA9424D-6369-4072-829C-A727C5B7316E}' />
    </window>
    <window class='worksheet' name='Q3.D'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:provider:nk]</field>
            <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk]</field>
            <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:source_facility_type:nk]</field>
            <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_834291898582269953:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{52F0DAB0-4F54-4638-BEFF-58DA3BE9C652}' />
    </window>
    <window class='worksheet' name='Q3.E'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:provider:nk]</field>
            <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk]</field>
            <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:source_facility_type:nk]</field>
            <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_562950019235213312:qk]</field>
            <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[usr:Calculation_834291898582269953:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1EF1888D-3169-4653-8441-E6E5C35AC9CB}' />
    </window>
    <window class='worksheet' name='Q4.A'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:odhf_facility_type:nk]</field>
            <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:provider:nk]</field>
            <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{57E87504-3D44-465D-A67A-BC6980E3596A}' />
    </window>
    <window class='worksheet' name='Q4.B'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:odhf_facility_type:nk]</field>
            <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:provider:nk]</field>
            <field>[federated.1hbb8w503obnen1fz9wgp015rf1i].[none:province:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C0509D75-48EE-4116-8645-DE2189208133}' />
    </window>
    <window class='worksheet' name='Sheet 13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2E261EC4-FA11-4838-AF46-D683DCA555E6}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{6CC43A17-330A-4C5F-A1E0-4474E914224D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q1. A' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Q1. B' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q2. A' width='192'>
      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
      wwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q2.B' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q3.A' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q3.B' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q3.C' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Q3.D' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q3.E' width='192'>
      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
      UE9amd39jLZN6PUCwVCMwacslV5vSly+9lHMhuP/ynank73NNUQBQMHZra6Sy2XSWO8fE/SQ
      SWUZ7HV02KWiB4TiaVKpDL29vYxNz+Fxdj7JYkE/sXSWVCpHb28PU3MLuGymDrtwYIdkrkAq
      VaC3t4fZxYvYTU/eAgoHvm3ShSKZTJmenm7mL13C0uEEMv7tTTL5AoVKG0+3m8VLSxhVfCUc
      2CFVqDI5PUcymaZ7QH0PiQPfJtlyk+nZWZKpDL0DnX8Pq9uDb3eNxP3fscnmVr3Wo5hsbqaP
      s1M+5ORyOdXPZVlSwvs+ZWV1Xak2Wqo2hdCWEkjXlLV7t5Vw+EC5s7x5bDvpsE/5zt/9QNnf
      31cy+dIpetZSAv6g6pFGJa/cvPG+cvfuHeW9924olab0lOu0lbXV9VO011TWVo/v/yOtK2ur
      2ydaSe2Ksr7uO9GuXs4oO3vhp1i0leV7q4rUqih/9ZffVFKFyjF2LWX53poiNYvKX37jW0qu
      XFe/Wr2k3Hj/hnJnZUNJx/aVDV/oxD7KsqxIsqx67IV8AzRKBUqNJtniYYg0mcowNtS5DqbO
      YKRerTK3eAm5VSWdU69bAnD2DLGI6XDZ+GPG4vVKiUy+eP+nNrlijXEVO6PVxSuvvnbi98jE
      w0RTGRLxNLIiMTw+jdvRudRiMnJAIpsjEc8gK23GpmZxWo0ddrGgn3ShSCKeRVaaTM5ewKby
      BggHfGSLJVKpIpJUZ2Z+AXPHG0DhwLdDtpAnX27TqBaZXZincyE8hUohw/qmhMliJREJ02Wf
      VZkHyBSzKda3WlhtVmLhMI7ZqY55QCYUYPTidaTgCpsJHW9cPjmJ2qoVWd4IcOXaFZ58gb+Q
      iTBZkpAe2fxCEEX0KovNKorCgW+TfKWJgo4LCwtYjOqL0gZ9G0QjSSxeLzq9g4szna/xZr1C
      sVxDQKFcrdHr7cdq7rwRH6XdqCHrzBhVxtmNahWdxYJeEGg1aig6k+p6pvVqFYPFik6ARr2K
      aDBj0HXa1apVTBYrogD1WhWDyYJO7Gz3UbtqtYLFYlV1+mq1ev/YYR7puFD6o8tXns5OoVKp
      qtplQ3vsZaoo5SzY3AwODDHcrz4nA2g3a+xs7+D0jjDk7e6II7yQk+BiLs3e3t7Rf/FjSrSV
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q4.A' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q4.B' width='192'>
      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
      0wMukgBDO8cAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 13' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Summary' width='192'>
      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
      kmmfLCsyyjF9T2epDhyBFRKX+wbJZnM43R5kSez+7nIjS+DPZbE7XNZpMIszyZG4oSQreEpK
      Hvz1gQuc3W5r/8Di7GItg1pcaCwHsLjQWA5gcaGxHMDiQmM5gMWFxnIAiwuN5QAWFxrLASwu
      NEfmANtrC0TTBYq5FPfu3iWWyqGrBaYn7rIVTlhSOIszyZE4QDGbYGl2krVIjrvj92hpb2N6
      4h6zE+OUN7axODcJjxBfWVicBoeWQgghmJldoL29hTUdVEnB5XThlATRoqDT62JdsZEH7JYa
      9LGx1KDHy+EdQC+SyWSZj20QsulUOQT5Qp6iJFNmh2g6T07XcGKpQQ+CpQY9Xg5thaw4uP7E
      k6iZGAndg1fJMzM9Q1tnNwG3zPT0DI0tHRz2ONjk5CSpVIqhoSFLWWpxZByZG9o8pQQBcHCl
      91eH6bt7juZg/erqKpWVlfzN3/wN7e3tXL9+/diDuFp89DlXy6Dd3d18+ctfpqqqioWFhdM2
      x+IjwLlxgOeee47JyUmy2Sytra2Ul5eftkkWHwHOjQO89957ZDIZvvnNb1IsFnn33XdP26QL
      RygU4p133mF2dpbXXnsNXT//4TLPjQOUlJRQUVHBpz71Kf76r/+abNaKVn3S/OxnP8PtdvOj
      H/0Iv9/P0tLSaZt0aM7GWtQ+6O3tZXl5mZqaGr74xS8SDodP26QLh91u5/Lly9jtdlKpFIqi
      HGn+uq6zvLxMc3PzkeZrxrlxgLt37zIxMcHt27f5/Oc/z+zsLE1NTadt1oVicHAQWZbp7u4m
      lUp94Oz3QVlcXOSNN95AlmV0XUdRFMsB9iKdTvPcc8+xvb3Na6+9dmZ2Ei8St27dwul00tzc
      zM2bN5Hlw4+gKyoqaGpq4mMf+xi6rvP6668fgaX759zMAa5du0Y+n6evr4/6+nrq6+tP26QL
      R01NDV/60pdoaGjg29/+NrFY7NB5lpSU8Oyzz2K324lEIjz77LOGaaPRKP/4j/9IOp1GVVXW
      1tYOXf6R9AC6rlEsqtgdDiSgUCg8/L1YLKDY7CgHbC309CiiuIMCNARAj8/Sfb/ua7EfIbla
      kF0X51K302RgYABJkmhububSpUuP1BPth9HRUd555x2CwSC3b9/my1/+MpcvX94z7VtvvcWN
      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
      LEwlj9NrAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total ' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
